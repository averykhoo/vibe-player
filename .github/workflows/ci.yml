# File: .github/workflows/ci.yml

name: Vibe Player CI

on:
  push:
    branches: [ "**" ] # Run on pushes to all branches
  pull_request:
    branches: [ "main", "master" ] # Run on PRs targeting main or master

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      # 1. Setup Node.js and configure caching for npm packages
      # This step handles caching for both the root and the /vibe-player-v2 directories
      # by looking at both package-lock.json files.
      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      # 2. Install dependencies for the V2 app and the root project.
      # The `setup-node` action automatically handles skipping this if the cache was restored.
      - name: Install root and V2 dependencies
        run: |
          npm ci
          cd vibe-player-v2 && npm ci && cd ..

      # 3. Run all tests and builds as before
      - name: Lint V2
        working-directory: ./vibe-player-v2
        run: npm run lint

      - name: Run V2 unit and component tests
        working-directory: ./vibe-player-v2
        run: npm run test:unit

      - name: Build Vibe Player V2
        working-directory: ./vibe-player-v2
        run: npm run build

      - name: Cache OS-level dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
            /var/lib/apt/lists
          key: ${{ runner.os }}-playwright-deps-${{ hashFiles('package-lock.json') }}-${{ hashFiles('vibe-player-v2/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-deps-

      - name: Install Playwright and its dependencies
        run: npx playwright install --with-deps

      # Start the preview server for E2E tests
      - name: Start V2 preview server
        working-directory: ./vibe-player-v2
        run: npm run preview &
        env:
          HOST: '0.0.0.0'
          PORT: 4173

      - name: Wait for Preview Server
        run: npx wait-on http://localhost:4173 --timeout 60000

      - name: Run Playwright E2E tests
        run: npx playwright test

      # 6. Cleanup and Reporting
      - name: Stop preview server
        if: always()
        run: pkill -f "vite preview" || echo "Preview server already stopped or not found."
        continue-on-error: true

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7
