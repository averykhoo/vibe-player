name: Vibe Player CI

on:
  push:
    branches: [ "**" ] # Run on pushes to all branches
  pull_request:
    branches: [ "main", "master" ] # Run on PRs targeting main or master

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
          # Cache path should ideally point to vibe-player-v2's package-lock if that's where npm install for it runs
          cache-dependency-path: vibe-player-v2/package-lock.json # Adjusted for V2

      # Note: The original plan mentioned linting and unit tests for V2.
      # These should run against vibe-player-v2.
      # Assuming these steps are correctly placed or will be adjusted:
      - name: Install V2 dependencies
        working-directory: ./vibe-player-v2
        run: npm install

      - name: Lint V2
        working-directory: ./vibe-player-v2
        run: npm run lint

      - name: Run V2 unit and component tests
        working-directory: ./vibe-player-v2
        run: npm run test:unit # Assuming this is the script for V2 tests

      # --- NEW: Build the V2 application first ---
      - name: Build Vibe Player V2
        working-directory: ./vibe-player-v2
        run: npm run build

      # --- CORRECTED: Start the preview server ---
      - name: Start V2 preview server for E2E tests
        working-directory: ./vibe-player-v2
        run: npm run preview & # The standard command is `npm run preview`. Run it in the background.
        env:
          HOST: '0.0.0.0'
          PORT: 4173

      - name: Echo Preview Server URL
        run: echo "Preview server expected at http://localhost:4173"

      - name: Wait for Preview Server
        run: npx wait-on http://localhost:4173 --timeout 60000

      - name: List Listening Ports (Diagnostics)
        run: sudo ss -tulnp | grep 'LISTEN' || echo "ss command failed or no listening ports found by grep"
        continue-on-error: true

      - name: Install root dependencies for Playwright
        run: npm install

      # The E2E tests are configured to run from the root, which is fine as PlayerPage.js targets the correct URL.
      - name: Install Playwright Browsers and dependencies # Moved here, as it's for E2E
        run: npx playwright install --with-deps

      - name: Run Playwright E2E tests
        working-directory: . # Playwright is configured at root
        run: npx playwright test
        # If Playwright needs display server on Linux CI: add `xvfb-run --auto-servernum` before npx playwright test

      - name: Stop preview server # Added step to stop server
        if: always() # Ensure it runs even if tests fail
        run: pkill -f "vite preview" || echo "Preview server already stopped or not found."
        continue-on-error: true

      - name: Upload Playwright report
        if: always() # Run this step even if previous steps fail, to get reports
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7
