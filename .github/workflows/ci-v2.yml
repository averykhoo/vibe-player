# .github/workflows/ci-v2.yml

name: Vibe Player CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test-v2:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: 'vibe-player-v2.3/package-lock.json'

      - name: Install V2 dependencies
        working-directory: ./vibe-player-v2.3
        run: npm ci

      - name: Lint V2
        working-directory: ./vibe-player-v2.3
        run: npm run lint

# COMMENTED OUT ALL V2 THINGS IN PREPARATION FOR V3

#      - name: Run V2 unit and component tests
#        working-directory: ./vibe-player-v2.3
#        run: npm run test:unit
#
#      - name: Build Vibe Player V2
#        working-directory: ./vibe-player-v2.3
#        run: npm run build
#
#      - name: Restore Playwright and OS Dependencies from Cache
#        id: cache-playwright-restore
#        uses: actions/cache/restore@v4
#        with:
#          path: |
#            /var/cache/apt/archives
#            /home/runner/.cache/ms-playwright
#          key: deps-${{ runner.os }}-playwright-${{ hashFiles('vibe-player-v2.3/package-lock.json') }}
#
#      - name: Install Playwright Browsers and OS Dependencies
#        # This step runs if the cache was not found.
#        # `--with-deps` will trigger `apt-get` which will now download necessary libs.
#        if: steps.cache-playwright-restore.outputs.cache-hit != 'true'
#        working-directory: ./vibe-player-v2.3
#        run: npx playwright install --with-deps
#
#      - name: Save Playwright and OS Dependencies to Cache
#        # This step runs only if the cache was not found during restore.
#        if: steps.cache-playwright-restore.outputs.cache-hit != 'true'
#        uses: actions/cache/save@v4
#        with:
#          path: |
#            /var/cache/apt/archives
#            /home/runner/.cache/ms-playwright
#          key: ${{ steps.cache-playwright-restore.outputs.cache-primary-key || format('deps-{0}-playwright-{1}', runner.os, hashFiles('vibe-player-v2.3/package-lock.json')) }}
#
#      - name: Run Playwright E2E tests
#        working-directory: ./vibe-player-v2.3
#        run: npx playwright test
#
#      - name: Upload Playwright report
#        if: always()
#        uses: actions/upload-artifact@v4
#        with:
#          name: playwright-report
#          path: vibe-player-v2.3/playwright-report/
#          retention-days: 7
#
#      - name: Upload Vibe Player Build Artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: vibe-player-build-${{ github.run_id }}-${{ github.sha }}
#          path: vibe-player-v2.3/build/
#          retention-days: 7